{"ast":null,"code":"var _jsxFileName = \"/Users/sarahzamrik/Documents/codingbootcamp/frontend/src/LoginPage.js\";\nimport React, { useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport AppContext from './AppContext';\nimport NavBar from './NavBar.js';\n\nconst LoginPage = () => {\n  // These will be assigned values by React\n  let emailField;\n  let passwordField;\n  const [globalState, setGlobalState] = useContext(AppContext);\n\n  const loginUser = () => {\n    fetch('http://localhost:8080/users/login', {\n      method: 'POST',\n      body: JSON.stringify({\n        email: emailField.value,\n        password: passwordField.value\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(result => result.json()).then(json => {\n      const {\n        message,\n        jsonwebtoken\n      } = json;\n\n      if (jsonwebtoken) {\n        // update the globalState\n        setGlobalState({ ...globalState,\n          loggedIn: true\n        }); // save the jwt in the browser\n\n        localStorage.setItem('jwt', jsonwebtoken);\n      } else {\n        // throw an error\n        alert(message);\n      }\n    });\n  }; // If the user is loggedIn, redirect them\n\n\n  if (globalState.loggedIn === true) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 16\n      }\n    });\n  } // Otherwise, show the login form\n  else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(NavBar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      }, \"Login\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm\",\n        style: {\n          maxWidth: '400px',\n          margin: '0 auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        for: \"exampleInputEmail1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 37\n        }\n      }, \"Email address\"), /*#__PURE__*/React.createElement(\"input\", {\n        ref: comp => emailField = comp,\n        type: \"email\",\n        className: \"form-control\",\n        id: \"exampleInputEmail1\",\n        \"aria-describedby\": \"emailHelp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        id: \"emailHelp\",\n        className: \"form-text text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 37\n        }\n      }, \"We'll never share your email with anyone else.\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        for: \"exampleInputPassword1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 37\n        }\n      }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n        ref: comp => passwordField = comp,\n        type: \"password\",\n        className: \"form-control\",\n        id: \"exampleInputPassword1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: loginUser,\n        type: \"button\",\n        className: \"btn btn-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 33\n        }\n      }, \"Submit\"))))));\n    }\n};\n\nexport default LoginPage;","map":{"version":3,"sources":["/Users/sarahzamrik/Documents/codingbootcamp/frontend/src/LoginPage.js"],"names":["React","useContext","Redirect","AppContext","NavBar","LoginPage","emailField","passwordField","globalState","setGlobalState","loginUser","fetch","method","body","JSON","stringify","email","value","password","headers","then","result","json","message","jsonwebtoken","loggedIn","localStorage","setItem","alert","maxWidth","margin","comp"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport AppContext from './AppContext';\nimport NavBar from './NavBar.js';\n\nconst LoginPage = () => {\n\n    // These will be assigned values by React\n    let emailField;\n    let passwordField;\n\n    const [globalState, setGlobalState] = useContext(AppContext);\n\n    const loginUser = () => {\n        fetch('http://localhost:8080/users/login', \n            {\n                method: 'POST',\n                body: JSON.stringify({\n                    email: emailField.value,\n                    password: passwordField.value\n                }),\n                headers: {\"Content-Type\": \"application/json\"}\n            }\n        )\n        .then(\n            (result) => result.json()\n        )\n        .then (\n            (json) => {\n                const { message, jsonwebtoken } = json;\n                if(jsonwebtoken) {\n                    // update the globalState\n                    setGlobalState(\n                        {\n                            ...globalState,\n                            loggedIn: true\n                        }\n                    )\n\n                    // save the jwt in the browser\n                    localStorage.setItem('jwt', jsonwebtoken);\n                } else {\n                    // throw an error\n                    alert(message);\n                }\n            }\n        )\n    }\n\n\n    // If the user is loggedIn, redirect them\n    if(globalState.loggedIn === true) {\n        return(<Redirect to=\"/\"/>)\n    }\n\n    // Otherwise, show the login form\n    else {\n        return(\n            <div>\n                <NavBar />\n                <h1>Login</h1>\n\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-sm\" \n                        style={{maxWidth: '400px', margin: '0 auto'}}>\n                            <div>\n                                <div className=\"form-group\">\n                                    <label for=\"exampleInputEmail1\">\n                                        Email address\n                                    </label>\n\n                                    <input \n                                    ref={ (comp)=> emailField = comp}\n                                    type=\"email\" \n                                    className=\"form-control\" \n                                    id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\n\n                                    <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label for=\"exampleInputPassword1\">Password</label>\n\n                                    <input \n                                    ref={(comp)=> passwordField = comp }\n                                    type=\"password\" \n                                    className=\"form-control\" \n                                    id=\"exampleInputPassword1\"/>\n\n                                </div>\n\n                                <button \n                                onClick={loginUser}\n                                type=\"button\"\n                                className=\"btn btn-primary\">Submit</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            </div>\n        )\n    }\n}\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}