{"ast":null,"code":"var _jsxFileName = \"/Users/sarahzamrik/Documents/codingbootcamp/finalproject/frontend/src/RegistrationPage.js\";\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { validEmail, validPassword } from './utils';\nimport NavBar from './NavBar.js';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst RegistrationPage = () => {\n  const [state, setState] = useState({\n    registered: false,\n    loading: false,\n    errors: 0,\n    messages: []\n  });\n  let firstNameField;\n  let lastNameField;\n  let emailField;\n  let passwordField;\n\n  const registerUser = () => {\n    let errors = 0;\n    let messages = [];\n\n    if (firstNameField.value.length < 1) {\n      errors++;\n      messages.push('Please enter a valid first name');\n    }\n\n    if (lastNameField.value.length < 1) {\n      errors++;\n      messages.push('Please enter a valid last name');\n    }\n\n    if (!validEmail(emailField.value)) {\n      errors++;\n      messages.push('Please enter a valid email');\n    }\n\n    if (!validPassword(passwordField.value)) {\n      errors++;\n      messages.push('Please enter a valid password');\n    }\n\n    if (errors > 0) {\n      setState({ ...state,\n        errors: errors,\n        messages: messages\n      });\n      return;\n    } else {\n      setState({ ...state,\n        errors: 0,\n        messages: [],\n        loading: true\n      });\n    }\n\n    fetch('http://localhost:8081/users/register', {\n      method: 'POST',\n      body: JSON.stringify({\n        firstName: firstNameField.value,\n        lastName: lastNameField.value,\n        email: emailField.value,\n        password: passwordField.value\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${localStorage.getItem('jwt')}`\n      }\n    }).then(response => response.json()).then(json => {\n      const {\n        message\n      } = json;\n\n      if (message === \"User has been saved\") {\n        setState({ ...state,\n          registered: true,\n          loading: false\n        });\n      } else {\n        setState({\n          loading: false\n        });\n      }\n    });\n  };\n\n  if (state.registered === true) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: \"user-circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, \"Sign up for your free account\"), /*#__PURE__*/React.createElement(\"p\", {\n      style: center,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, \"Get access to exclusive benefits for members only!\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm\",\n      style: {\n        maxWidth: '400px',\n        margin: '0 auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 37\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      ref: comp => firstNameField = comp,\n      type: \"text\",\n      className: \"form-control\",\n      \"aria-describedby\": \"firstName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 37\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      ref: comp => lastNameField = comp,\n      type: \"text\",\n      className: \"form-control\",\n      \"aria-describedby\": \"lastName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"exampleInputEmail1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 37\n      }\n    }, \"Email address\"), /*#__PURE__*/React.createElement(\"input\", {\n      ref: comp => emailField = comp,\n      type: \"email\",\n      className: \"form-control\",\n      id: \"exampleInputEmail1\",\n      \"aria-describedby\": \"emailHelp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      id: \"emailHelp\",\n      className: \"form-text text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 37\n      }\n    }, \"We will never share your information with third parties or anyone else.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 37\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      ref: comp => passwordField = comp,\n      type: \"password\",\n      className: \"form-control\",\n      \"aria-describedby\": \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: registerUser,\n      type: \"button\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 33\n      }\n    }, \"Register\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 38\n      }\n    }), state.loading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 34\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      className: \"circular\",\n      viewBox: \"25 25 50 50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"circle\", {\n      className: \"path\",\n      cx: \"50\",\n      cy: \"50\",\n      r: \"20\",\n      fill: \"none\",\n      \"stroke-width\": \"2\",\n      \"stroke-miterlimit\": \"10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 41\n      }\n    }))), state.errors > 0 && /*#__PURE__*/React.createElement(\"div\", {\n      class: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 37\n      }\n    }, state.messages.map(message => /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 60\n      }\n    }, message))))))));\n  }\n};\n\nexport default RegistrationPage;","map":{"version":3,"sources":["/Users/sarahzamrik/Documents/codingbootcamp/finalproject/frontend/src/RegistrationPage.js"],"names":["React","useState","Redirect","validEmail","validPassword","NavBar","FontAwesomeIcon","RegistrationPage","state","setState","registered","loading","errors","messages","firstNameField","lastNameField","emailField","passwordField","registerUser","value","length","push","fetch","method","body","JSON","stringify","firstName","lastName","email","password","headers","localStorage","getItem","then","response","json","message","center","maxWidth","margin","comp","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { validEmail, validPassword } from './utils'; \nimport NavBar from './NavBar.js';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst RegistrationPage = () => {\n\n    const [state, setState] = useState(\n        {\n            registered: false,\n            loading: false,\n            errors: 0,\n            messages: []\n        }\n    );\n\n    let firstNameField;\n    let lastNameField;\n    let emailField;\n    let passwordField;\n\n    const registerUser = () => {\n\n        let errors = 0;\n        let messages = [];\n\n        if(firstNameField.value.length < 1) {\n            errors++;\n            messages.push('Please enter a valid first name')\n        }\n        if(lastNameField.value.length < 1) {\n            errors++;\n            messages.push('Please enter a valid last name')\n        }\n        if(!validEmail(emailField.value)) {\n            errors++;\n            messages.push('Please enter a valid email')\n        }\n        if(!validPassword(passwordField.value)) {\n            errors++;\n            messages.push('Please enter a valid password')\n        }\n\n        if(errors > 0) {\n            setState(\n                {\n                    ...state,\n                    errors: errors,\n                    messages: messages,\n                }\n            )\n            return;\n        } \n        else {\n            setState(\n                {\n                    ...state,\n                    errors: 0,\n                    messages: [],\n                    loading: true\n                }\n            )\n        }\n\n        fetch('http://localhost:8081/users/register', {\n            method: 'POST',\n            body: JSON.stringify({\n                firstName: firstNameField.value,\n                lastName: lastNameField.value,\n                email: emailField.value,\n                password: passwordField.value\n            }),\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${localStorage.getItem('jwt')}`\n              }\n        })\n        .then(\n            (response)=>response.json()\n        )\n        .then(\n            (json)=> {\n                const { message } = json;\n                if(message === \"User has been saved\") {\n                    setState(\n                        {\n                            ...state,\n                            registered: true,\n                            loading: false\n                        }\n                    )\n                } else {\n                    setState(\n                        {\n                            loading: false\n                        }\n                    )\n                }\n            }\n        )\n    }\n\n    if(state.registered === true) {\n        return (<Redirect to=\"/login\"/>)\n    }\n\n    else {\n        return(\n            <div>\n                <NavBar />\n                <FontAwesomeIcon icon=\"user-circle\"/>\n                <h1>Sign up for your free account</h1>\n                <p style={center}>Get access to exclusive benefits for members only!</p>\n\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-sm\" \n                        style={{maxWidth: '400px', margin: '0 auto'}}>\n                            <div>\n                                <div className=\"form-group\">\n                                    <label>\n                                        First Name\n                                    </label>\n\n                                    <input \n                                    ref={(comp)=>firstNameField = comp}\n                                    type=\"text\" \n                                    className=\"form-control\" \n                                    aria-describedby=\"firstName\"/>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>\n                                        Last Name\n                                    </label>\n\n                                    <input \n                                    ref={(comp)=>lastNameField = comp}\n                                    type=\"text\" \n                                    className=\"form-control\" \n                                    aria-describedby=\"lastName\"/>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"exampleInputEmail1\">\n                                        Email address\n                                    </label>\n\n                                    <input \n                                    ref={(comp)=>emailField = comp}\n                                    type=\"email\" \n                                    className=\"form-control\" \n                                    id=\"exampleInputEmail1\" \n                                    aria-describedby=\"emailHelp\"/>\n\n                                    <small id=\"emailHelp\" className=\"form-text text-muted\">We will never share your information with third parties or anyone else.</small>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>\n                                        Password\n                                    </label>\n\n                                    <input \n                                    ref={(comp)=>passwordField = comp}\n                                    type=\"password\" \n                                    className=\"form-control\" \n                                    aria-describedby=\"password\"/>\n                                </div>\n\n                                <button\n                                onClick={registerUser}\n                                type=\"button\"\n                                className=\"btn btn-primary\">Register\n                                </button>\n                                <br/><br/>\n\n                                {\n                                 state.loading && \n                                 <div className=\"loader\">\n                                    <svg className=\"circular\" viewBox=\"25 25 50 50\">\n                                        <circle className=\"path\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke-width=\"2\" stroke-miterlimit=\"10\"/>\n                                    </svg>\n                                </div>\n                                }\n\n                                {\n                                    state.errors > 0 &&\n                                    <div class=\"alert alert-danger\" role=\"alert\">\n                                        {\n                                            state.messages.map(\n                                                (message)=><p>{message}</p>\n                                            )\n                                        }\n                                    </div>\n                                }\n                        </div>\n                    </div>\n                </div>\n              </div>\n            </div>\n        )\n    }\n}\nexport default RegistrationPage;"]},"metadata":{},"sourceType":"module"}