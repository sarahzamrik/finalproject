{"ast":null,"code":"var _jsxFileName = \"/Users/sarahzamrik/Documents/codingbootcamp/frontend/src/RegistrationPage.js\";\nimport React from 'react';\nimport NavBar from './NavBar.js';\n\nconst RegistrationPage = () => {\n  // Add ref prop to all input fields\n  let firstName;\n  let lastName;\n  let email;\n  let password; // Connected to globalState\n\n  const [globalState, setGlobalState] = useContext(); // A local state\n\n  const [state, setState] = useState({\n    loading: false\n  });\n\n  const registerUser = () => {\n    fetch('http://localhost:8081/users/register', {\n      method: 'POST',\n      body: JSON.stringify({\n        firstName: firstNameField.value,\n        lastName: lastNameField.value,\n        email: emailField.value,\n        password: passwordField.value\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(result => result.json());\n    setState({ ...state,\n      loading: true\n    }).then( // Start loading\n    json => {\n      const {\n        message,\n        jsonwebtoken\n      } = json;\n\n      if (jsonwebtoken) {\n        // update the globalState\n        setGlobalState({ ...globalState,\n          registered: true\n        });\n        setState({ ...state,\n          loading: false\n        });\n      } else {\n        // throw an error\n        alert(message);\n      }\n    });\n  }; // If the user is registered, redirect them\n\n\n  if (globalState.registered === true) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 16\n      }\n    });\n  } // Otherwise, show the login form\n  else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(NavBar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }, \"Registration\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm\",\n        style: {\n          maxWidth: '400px',\n          margin: '0 auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 37\n        }\n      }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n        ref: comp => firstName,\n        type: \"text\",\n        className: \"form-control\",\n        \"aria-describedby\": \"firstName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 37\n        }\n      }, \"Last Name\"), /*#__PURE__*/React.createElement(\"input\", {\n        ref: comp => lastName,\n        type: \"text\",\n        className: \"form-control\",\n        \"aria-describedby\": \"lastName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"exampleInputEmail1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 37\n        }\n      }, \"Email address\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"email\",\n        className: \"form-control\",\n        id: \"exampleInputEmail1\",\n        \"aria-describedby\": \"emailHelp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        id: \"emailHelp\",\n        className: \"form-text text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 37\n        }\n      }, \"We'll never share your email with anyone else.\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 37\n        }\n      }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        \"aria-describedby\": \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 33\n        }\n      }, \"Register\"))))));\n    }\n};\n\nexport default RegistrationPage;","map":{"version":3,"sources":["/Users/sarahzamrik/Documents/codingbootcamp/frontend/src/RegistrationPage.js"],"names":["React","NavBar","RegistrationPage","firstName","lastName","email","password","globalState","setGlobalState","useContext","state","setState","useState","loading","registerUser","fetch","method","body","JSON","stringify","firstNameField","value","lastNameField","emailField","passwordField","headers","then","result","json","message","jsonwebtoken","registered","alert","maxWidth","margin","comp"],"mappings":"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","sourcesContent":["import React from 'react';\nimport NavBar from './NavBar.js';\n\nconst RegistrationPage = () => {\n\n    // Add ref prop to all input fields\n    let firstName;\n    let lastName;\n    let email;\n    let password;\n\n    // Connected to globalState\n    const [globalState, setGlobalState] = useContext();\n    \n    // A local state\n    const [state, setState] = useState(\n        {\n            loading: false\n        }\n    )\n\nconst registerUser = () => {\n\n    fetch('http://localhost:8081/users/register', \n        {\n            method: 'POST',\n            body: JSON.stringify({\n                firstName: firstNameField.value,\n                lastName: lastNameField.value,\n                email: emailField.value,\n                password: passwordField.value\n            }),\n            headers: {\"Content-Type\": \"application/json\"}\n        }\n    )\n    .then(\n        (result) => result.json()\n    )\n    setState({...state, loading: true})\n    .then (\n        // Start loading\n        (json) => {\n            const { message, jsonwebtoken } = json;\n            if(jsonwebtoken) {\n                // update the globalState\n                setGlobalState(\n                    {\n                        ...globalState,\n                        registered: true\n                    }\n                )\n\n                setState({...state, loading: false})\n            } else {\n                // throw an error\n                alert(message);\n            }\n        }\n    )\n}\n\n    // If the user is registered, redirect them\n    if(globalState.registered === true) {\n        return(<Redirect to=\"/login\"/>)\n    }\n\n    // Otherwise, show the login form\n    else {\n        return(\n            <div>\n                <NavBar />\n                <h1>Registration</h1>\n\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-sm\" \n                        style={{maxWidth: '400px', margin: '0 auto'}}>\n                            <div>\n\n\n                                <div className=\"form-group\">\n                                    <label>\n                                        First Name\n                                    </label>\n\n                                    <input \n                                    ref={(comp)=> firstName}\n                                    type=\"text\" \n                                    className=\"form-control\" \n                                    aria-describedby=\"firstName\"/>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>\n                                        Last Name\n                                    </label>\n\n                                    <input \n                                    ref={(comp)=> lastName}\n                                    type=\"text\" \n                                    className=\"form-control\" \n                                    aria-describedby=\"lastName\"/>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"exampleInputEmail1\">\n                                        Email address\n                                    </label>\n\n                                    <input \n                                    \n                                    type=\"email\" \n                                    className=\"form-control\" \n                                    id=\"exampleInputEmail1\" \n                                    aria-describedby=\"emailHelp\"/>\n\n                                    <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>\n                                        Password\n                                    </label>\n\n                                    <input \n                                    type=\"password\" \n                                    className=\"form-control\" \n                                    aria-describedby=\"password\"/>\n                                </div>\n\n                                <button\n                                type=\"button\"\n                                className=\"btn btn-primary\">Register\n                                </button>\n                        </div>\n                    </div>\n                </div>\n              </div>\n            </div>\n        )\n    }\n}\n\nexport default RegistrationPage;"]},"metadata":{},"sourceType":"module"}