{"ast":null,"code":"var _jsxFileName = \"/Users/sarahzamrik/Documents/codingbootcamp/finalproject/frontend/src/App.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport { render } from \"react-dom\";\nimport AppContext from './AppContext';\nimport LandingPage from './LandingPage';\nimport LoginPage from './LoginPage';\nimport RegistrationPage from './RegistrationPage';\nimport SettingsPage from './SettingsPage';\nimport './App.css';\n\nconst PrivateRoute = ({\n  component: Component,\n  ...otherProps\n}) => {\n  const [globalState, setGlobalState] = useContext(AppContext);\n\n  if (globalState.loggedIn) {\n    return /*#__PURE__*/React.createElement(Route, Object.assign({\n      component: Component\n    }, otherProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 12\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 12\n      }\n    });\n  }\n};\n\nconst App = () => {\n  const [globalState, setGlobalState] = useState({\n    loggedIn: localStorage.getItem('jwt') ? true : false,\n    user: null\n  });\n  useEffect(() => {\n    console.log(\"This the loggedIn state\", globalState.loggedIn);\n  }, [globalState.loggedIn]);\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: [globalState, setGlobalState],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    component: LandingPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/login\",\n    exact: true,\n    component: LoginPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/register\",\n    exact: true,\n    component: RegistrationPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PrivateRoute, {\n    path: \"/settings\",\n    exact: true,\n    component: SettingsPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/sarahzamrik/Documents/codingbootcamp/finalproject/frontend/src/App.js"],"names":["React","useState","useContext","useEffect","BrowserRouter","Route","Switch","Redirect","render","AppContext","LandingPage","LoginPage","RegistrationPage","SettingsPage","PrivateRoute","component","Component","otherProps","globalState","setGlobalState","loggedIn","App","localStorage","getItem","user","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,EAAuCC,QAAvC,QAAuD,kBAAvD;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,WAAP;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAA6C;AAEhE,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCjB,UAAU,CAACO,UAAD,CAAhD;;AAEA,MAAGS,WAAW,CAACE,QAAf,EAAyB;AACvB,wBAAO,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEJ;AAAlB,OAAiCC,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAFD,MAEO;AACL,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AACF,CATD;;AAWA,MAAMI,GAAG,GAAG,MAAM;AAEhB,QAAM,CAACH,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAAC;AAC7CmB,IAAAA,QAAQ,EAAEE,YAAY,CAACC,OAAb,CAAqB,KAArB,IAA8B,IAA9B,GAAqC,KADF;AAE7CC,IAAAA,IAAI,EAAE;AAFuC,GAAD,CAA9C;AAKArB,EAAAA,SAAS,CACP,MAAI;AACAsB,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCR,WAAW,CAACE,QAAnD;AACH,GAHM,EAIP,CAACF,WAAW,CAACE,QAAb,CAJO,CAAT;AAOA,sBAEE,oBAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE,CAACF,WAAD,EAAcC,cAAd,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,KAAK,EAAE,IAAvB;AAA6B,IAAA,SAAS,EAAET,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAE,IAA5B;AAAkC,IAAA,SAAS,EAAEC,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,WAAZ;AAAwB,IAAA,KAAK,EAAE,IAA/B;AAAqC,IAAA,SAAS,EAAEC,gBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,WAAnB;AAA+B,IAAA,KAAK,EAAE,IAAtC;AAA4C,IAAA,SAAS,EAAEC,YAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CADF,CAFF;AAaD,CA3BD;;AA8BA,eAAeQ,GAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport { render } from \"react-dom\"\nimport AppContext from './AppContext';\nimport LandingPage from './LandingPage';\nimport LoginPage from './LoginPage';\nimport RegistrationPage from './RegistrationPage';\nimport SettingsPage from './SettingsPage';\nimport './App.css';\n\nconst PrivateRoute = ({ component: Component, ...otherProps }) => {\n\n  const [globalState, setGlobalState] = useContext(AppContext);\n\n  if(globalState.loggedIn) {\n    return(<Route component={Component} {...otherProps} />);\n  } else {\n    return(<Redirect to=\"/login\" />);\n  }\n};\n\nconst App = () => {\n\n  const [globalState, setGlobalState] = useState({\n    loggedIn: localStorage.getItem('jwt') ? true : false,\n    user: null\n  });\n\n  useEffect(\n    ()=>{\n        console.log(\"This the loggedIn state\", globalState.loggedIn)\n    }, \n    [globalState.loggedIn]\n  );\n\n  return (\n\n    <AppContext.Provider value={[globalState, setGlobalState]}>\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/\" exact={true} component={LandingPage}/>\n          <Route path=\"/login\" exact={true} component={LoginPage}/>\n          <Route path=\"/register\" exact={true} component={RegistrationPage}/>\n          <PrivateRoute path=\"/settings\" exact={true} component={SettingsPage}/>\n        </Switch>\n      </BrowserRouter>\n    </AppContext.Provider>\n  )\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}